# Server Port
server.port=8080

# --- Database Configuration ---
# Use placeholders for database credentials in your code.
# These will be replaced by environment variables when deployed on Render.
# For local development, you might keep your local PostgreSQL credentials here
# or use a separate profile (e.g., application-local.properties).
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# JPA/Hibernate Configuration for logging (can stay as is)
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true


# --- Spring Security OAuth2 Client Configuration (for Google Login) ---
# Also use placeholders for sensitive client IDs/secrets.
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET}
spring.security.oauth2.client.registration.google.scope=openid,email,profile

spring.security.oauth2.client.provider.google.issuer-uri=https://accounts.google.com

# Logging Levels (Optional, for debugging)
logging.level.org.springframework.security=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE